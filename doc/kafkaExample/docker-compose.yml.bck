---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:3.3.1
    hostname: zookeeper
    ports:
      - '32181:32181'
    volumes:
      - /dockerdata/zookeeper_1/zk-data:/var/lib/zookeeper/data
      - /dockerdata/zookeeper_1/zk-txn-logs:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:3.3.1
    hostname: kafka
    ports:
      - '9092:9092'
    links:
     - "zookeeper"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:32181
      ADVERTISED_HOST: kafka
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_CREATE_TOPICS: "streams-file-input:1:1,streams-file-output:1:1"
    volumes:
      - /dockerdata/kafka_1/kakfa-data:/var/lib/kafka/data

  # This "container" is a workaround to pre-create topics
  kafka-create-topics:
    image: confluentinc/cp-kafka:3.3.1
    links:
      - "kafka"
    hostname: kafka-create-topics
    # We defined a dependency on "kafka", but `depends_on` will NOT wait for the
    # dependencies to be "ready" before starting the "kafka-create-topics"
    # container;  it waits only until the dependencies have started.  Hence we
    # must control startup order more explicitly.
    # See https://docs.docker.com/compose/startup-order/
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9092 1 20 && \
          	       kafka-topics --create --topic streams-file-input --if-not-exists --zookeeper zookeeper:32181 --partitions 1 --replication-factor 1 && \
                       kafka-topics --create --topic streams-file-output --if-not-exists --zookeeper zookeeper:32181 --partitions 1 --replication-factor 1 && \
                       sleep infinity'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored


  







      
      
